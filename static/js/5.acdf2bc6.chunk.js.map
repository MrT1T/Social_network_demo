{"version":3,"sources":["hoc/withAuthRedirect.js","Components/Dialogs/Dialogs.module.css","Components/Dialogs/DilogsItem/DialogsItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","DialogItem","link","id","linkimg","ava","className","s","dialog","active","avatar","src","alt","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","key","messageElements","m","dialogsItems","messages","values","addMessage","newMassageBody","compose"],"mappings":"0FAAA,sEAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAO7B,OADiCC,YAASN,EAATM,EALT,SAACC,GACrB,OAAIA,EAAML,OACH,kBAACG,EAAcE,GADG,kBAAC,IAAD,CAAUC,GAAI,gB,oBCT/CC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,+FCgBrMC,EAZI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAC3BC,EAAUP,EAAMQ,IACpB,OAEA,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAO,IAAIF,IAAEG,QAC5C,yBAAKC,IAAKP,EAASQ,IAAI,KACvB,kBAAC,IAAD,CAASd,GAAII,GAAOL,EAAMgB,QCJnBC,EAJC,SAACjB,GACb,OAAQ,yBAAKS,UAAWC,IAAEQ,SAAUlB,EAAMkB,U,kCCyBxCC,EAAcC,YAAiB,IAW/BC,EAAsBC,YAAU,CAACC,KAAM,WAAjBD,EAVL,SAACtB,GACpB,OACI,0BAAMwB,SAAUxB,EAAMyB,cAClB,6BAAK,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAM,iBAAkBa,YAAa,oBAC1DC,SAAU,CAACC,IAAUZ,MACjC,iCAAM,6CASHa,EApCC,SAAChC,GAEb,IAAIiC,EAAkBjC,EAAMkC,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAE/B,GAAIA,GAAI+B,EAAE/B,GAC/BE,IAAK6B,EAAE7B,SACxE+B,EAAkBvC,EAAMkC,YAAYhB,QAAQkB,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAASoB,IAAKE,EAAElC,QAK7F,OACI,yBAAKG,UAAWC,IAAEyB,SACd,yBAAK1B,UAAWC,IAAE+B,cACbR,GAEL,yBAAKxB,UAAWC,IAAEgC,UACf,6BAAMH,GACL,kBAAClB,EAAD,CAAqBG,SAXd,SAACmB,GAChB3C,EAAM4C,WAAWD,EAAOE,sB,wBCMjBC,sBAAQ/C,aAdD,SAACL,GACnB,MAAO,CACHwC,YAAaxC,EAAMwC,eAYqB,CAACU,iBAAc/C,IAAhDiD,CAAkEd","file":"static/js/5.acdf2bc6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if(!props.isAuth) return <Redirect to={'/Login'}/>\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Owte\",\"dialogsItems\":\"Dialogs_dialogsItems__1k5aB\",\"dialog\":\"Dialogs_dialog__3AEwS\",\"messages\":\"Dialogs_messages__xwyZ0\",\"message\":\"Dialogs_message__1ZN-j\",\"avatar\":\"Dialogs_avatar__5BkyR\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let link = '/Dialogs/' + props.id;\r\n    let linkimg = props.ava;\r\n    return (\r\n\r\n    <div className={s.dialog + ' ' + s.active+' '+s.avatar}>\r\n        <img src={linkimg} alt=\"\"/>\r\n        <NavLink to={link}>{props.name}</NavLink>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (<div className={s.message}>{props.message}</div>)\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DilogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/Validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}\r\n                                                                         ava={d.ava}/>)\r\n    let messageElements = props.dialogsPage.message.map(m => <Message message={m.message} key={m.id}/>)\r\n      let addMessage = (values) => {\r\n        props.addMessage(values.newMassageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n               <div>{messageElements}</div>\r\n                <AddMessageFormRedux onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field component={Textarea} name={'newMassageBody'} placeholder={'Enter new message'}\r\n                        validate={[required, maxLength50]}/></div>\r\n            <div> <button >Send</button></div>\r\n        </form>\r\n\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form: 'addPost'})(AddMessageForm)\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessage} from \"../../Redax/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMassageBody) => {\r\n            dispatch(addMessage(newMassageBody));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {addMessage}), withAuthRedirect)(Dialogs);"],"sourceRoot":""}